头文件中定义函数的话，为了避免链接时的重复行为，在函数前面加一个static关键字，这样就限制了不管哪一个文件包含了此函数的定义，函数都只能限定在自己文件域中使用，而不会跨文件可见，这样就避免重复定义问题。
老老实实就把头文件的定义和实现分开不久行了吗，哪有那么多破事，老是触碰到编译单元的链接问题。
之前的头文件变量使用extern 解决重复定义问题，当然const 变量就无所谓，直接声明和定义一起在头文件中实现。

而我们的#ifndef XXX   #define XXX #endif是为了解决一个编译单元中（即一个文件）中包含多次头文件，导致的单个文件中的重复定义问题（上面链接时的重复定义问题是整个工程多文件的重复定义问题）

.h的内容被插入到.c中，作为.c的内容被编译。.h文件本身不直接参加编译。 
So,即使头文件中有错误，如果不被一个.cpp包含，那也不会编译出错！！！

预编译只是暴力的复制黏贴行为，不小心使用会导致很多问题！
